spring:
  datasource:
    url: jdbc:mysql://rm-bp1refbfnvk2t7235do.mysql.rds.aliyuncs.com:3306/iam_core?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: iam_core
    password: 7YDCq@TfC_L9vgP

  data:
    redis:
      database: 2

# OAuth2 Configuration - Dual Role: Client & Resource Server
oauth2:
  # OAuth2 Client Configuration - For outbound API calls to other services
  client:
    enabled: ${OAUTH2_CLIENT_ENABLED:true}
    client-id: ${OAUTH2_CLIENT_ID:iam-core-service}
    client-secret: ${OAUTH2_CLIENT_SECRET:core-service-secret}
    token-uri: ${OAUTH2_TOKEN_URI:http://iam-auth-service/oauth2/token}
    scope: ${OAUTH2_CLIENT_SCOPE:internal.read,internal.write,user.read,user.write,role.read,role.write}
    connect-timeout: ${OAUTH2_CONNECT_TIMEOUT:5000}
    read-timeout: ${OAUTH2_READ_TIMEOUT:10000}
    token-cache-expire: ${OAUTH2_TOKEN_CACHE_EXPIRE:3300}
    max-retries: ${OAUTH2_MAX_RETRIES:3}
  # OAuth2 Resource Server Configuration - For inbound API calls validation
  resource-server:
    jwt:
      jwk-set-uri: ${OAUTH2_JWK_SET_URI:http://localhost:8080/oauth2/jwks}

mybatis-plus:
  type-aliases-package: com.xiaoxin.iam.core.entity

logging:
  level:
    "[com.xiaoxin.iam.core]": ${CORE_LOG_LEVEL:info}
    "[org.springframework.security]": ${SECURITY_LOG_LEVEL:info}
    "[org.springframework.security.oauth2]": ${OAUTH2_LOG_LEVEL:debug}