spring:
  data:
    redis:
      database: 1

  cloud:
    sentinel:
      transport:
        dashboard: ${SENTINEL_DASHBOARD:localhost:8181}
        port: 8719
        heartbeat-interval-ms: 10000
        client-ip: ${spring.cloud.client.ip-address:127.0.0.1}
      datasource:
        gw-flow:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
            namespace: dev
            group-id: SENTINEL_GROUP
            data-id: iam-gateway-flow-rules
            rule-type: GW_FLOW
        gw-api-group:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
            namespace: dev
            group-id: SENTINEL_GROUP
            data-id: iam-gateway-api-group-rules
            rule-type: GW_API_GROUP
        gw-degrade:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
            namespace: dev
            group-id: SENTINEL_GROUP
            data-id: iam-gateway-degrade-rules
            rule-type: DEGRADE
        system:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
            namespace: dev
            group-id: SENTINEL_GROUP
            data-id: iam-gateway-system-rules
            rule-type: SYSTEM
        param-flow:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
            namespace: dev
            group-id: SENTINEL_GROUP
            data-id: iam-gateway-param-flow-rules
            rule-type: PARAM_FLOW
        authority:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
            namespace: dev
            group-id: SENTINEL_GROUP
            data-id: iam-gateway-authority-rules
            rule-type: AUTHORITY
      scg:
        fallback:
          mode: response
          response-status: 429
          response-body: '{"code":429,"message":"Too many requests, please try again later","data":null,"timestamp":"${#date}"}'
          content-type: application/json
        order: -100
      eager: true
      log:
        dir: logs/sentinel
        use-pid: true
        switch-pid: false
      servlet:
        enabled: false
      filter:
        enabled: true
        order: -2147483648

    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins:
              - "http://localhost:8088"
              - "http://127.0.0.1:8088"
              - "http://localhost:3000"
              - "http://127.0.0.1:3000"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowed-headers:
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
            allow-credentials: true
      
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      
      routes:
        - id: iam-auth-service-login
          uri: lb://iam-auth-service
          predicates:
            - Path=/api/v1/auth/login,/api/v1/auth/logout,/api/v1/auth/refresh
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                redis-rate-limiter.requestedTokens: 1
            - name: Retry
              args:
                retries: 3
                methods: GET,POST
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
                  factor: 2
                  basedOnPreviousValue: false
        
        - id: iam-auth-service-oauth2-public
          uri: lb://iam-auth-service
          predicates:
            - Path=/oauth2/jwks
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
            - AddRequestHeader=X-Endpoint-Type, oauth2-public
            - AddRequestHeader=X-Service-Source, gateway
        
        - id: iam-auth-service-oauth2-protected
          uri: lb://iam-auth-service
          predicates:
            - Path=/oauth2/token,/oauth2/authorize,/oauth2/introspect,/oauth2/revoke
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
            - AddRequestHeader=X-Endpoint-Type, oauth2-protected
        
        - id: iam-auth-service-oauth2
          uri: lb://iam-auth-service
          predicates:
            - Path=/api/v1/auth/oauth2/**,/api/v1/auth/callback/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
        
        - id: iam-auth-service
          uri: lb://iam-auth-service
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60
        
        - id: iam-core-service-users
          uri: lb://iam-core-service
          predicates:
            - Path=/api/v1/core/users/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100
            - AddRequestHeader=X-Service-Name, iam-core-service
        
        - id: iam-core-service-roles
          uri: lb://iam-core-service
          predicates:
            - Path=/api/v1/core/roles/**,/api/v1/core/permissions/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 40
                redis-rate-limiter.burstCapacity: 80
        
        - id: iam-core-service-depts
          uri: lb://iam-core-service
          predicates:
            - Path=/api/v1/core/depts/**,/api/v1/core/posts/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60
        
        - id: iam-core-service
          uri: lb://iam-core-service
          predicates:
            - Path=/api/v1/core/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 60
                redis-rate-limiter.burstCapacity: 120
        
        - id: iam-system-service-config
          uri: lb://iam-system-service
          predicates:
            - Path=/api/v1/system/config/**,/api/v1/system/dict/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
        
        - id: iam-system-service-notification
          uri: lb://iam-system-service
          predicates:
            - Path=/api/v1/system/notifications/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60
        
        - id: iam-system-service
          uri: lb://iam-system-service
          predicates:
            - Path=/api/v1/system/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 40
                redis-rate-limiter.burstCapacity: 80
        
        - id: iam-audit-service-logs
          uri: lb://iam-audit-service
          predicates:
            - Path=/api/v1/audit/logs/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 30
        
        - id: iam-audit-service-reports
          uri: lb://iam-audit-service
          predicates:
            - Path=/api/v1/audit/reports/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
        
        - id: iam-audit-service
          uri: lb://iam-audit-service
          predicates:
            - Path=/api/v1/audit/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
        
        - id: iam-frontend-assets
          uri: lb://iam-frontend
          predicates:
            - Path=/assets/**,/static/**,/favicon.ico
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
            - name: SetPath
              args:
                template: /{segment}
        
        - id: iam-frontend
          uri: lb://iam-frontend
          predicates:
            - Path=/,/login,/dashboard,/users/**,/roles/**,/system/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100
        
        
        - id: websocket-notification
          uri: lb:ws://iam-system-service
          predicates:
            - Path=/ws/notifications/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20

security:
  jwt:
    secret: xiaoxin-iam-platform-jwt-secret-key-2024
    expiration: 7200000
    refresh-expiration: 604800000

auth:
  whitelist:
    - /api/v1/auth/login
    - /api/v1/auth/logout
    - /api/v1/auth/register
    - /api/v1/auth/captcha
    - /api/v1/auth/callback/**
    # OAuth2 Public endpoints
    - /oauth2/jwks
    - /actuator/**
    - /favicon.ico
    - /assets/**
    - /static/**
    - /fallback/**

rate-limit:
  enabled: true
  default-replenish-rate: 10
  default-burst-capacity: 20

sentinel:
  degrade:
    enabled: true
    failure-rate-threshold: 50.0
    slow-call-rate-threshold: 50.0
    slow-call-duration-threshold: 2000
    minimum-number-of-calls: 10
    sliding-window-size: 100
    wait-duration-in-open-state: 10000

retry:
  enabled: true
  max-attempts: 3
  backoff:
    initial-interval: 1000
    max-interval: 10000
    multiplier: 2.0

seata:
  enabled: false

app:
  name: xiaoxin-iam-gateway
  version: 1.0.0

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus,gateway"
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    com.xiaoxin.iam.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
    org.springframework.security: DEBUG
  file:
    name: logs/iam-gateway.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"