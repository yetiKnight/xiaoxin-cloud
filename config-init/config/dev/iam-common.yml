spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 10
      maximum-pool-size: 100
      auto-commit: true
      idle-timeout: 300000
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 10000ms
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

  cloud:
    sentinel:
      transport:
        dashboard: ${SENTINEL_DASHBOARD:localhost:8181}
      eager: true
    stream:
      rocketmq:
        binder:
          name-server: ${ROCKETMQ_NAME_SERVER:localhost:9876}
        bindings:
          output:
            producer:
              group: iam-platform-producer-group
          input:
            consumer:
              group: iam-platform-consumer-group


mybatis-plus:
  mapper-locations: classpath*:mapper/**/*Mapper.xml
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
  global-config:
    db-config:
      id-type: ASSIGN_ID
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0

seata:
  enabled: true
  application-id: iam-platform
  tx-service-group: iam-platform-group
  service:
    vgroup-mapping:
      iam-platform-group: default
    grouplist:
      default: ${SEATA_SERVER:localhost:8091}
    enable-degrade: false
    disable-global-transaction: false
  config:
    type: nacos
    nacos:
      server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
      namespace: ${NACOS_NAMESPACE:dev}
      group: SEATA_GROUP
      data-id: seataServer.properties
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
      namespace: ${NACOS_NAMESPACE:dev}
      group: SEATA_GROUP

iam:
  security:
    jwt:
      secret: ${JWT_SECRET:xiaoxin-iam-platform-jwt-secret-key-for-256-bits-hmac-sha-algorithm-2024}
      expiration: ${JWT_EXPIRATION:7200000}
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
      access-token-expiration: ${JWT_EXPIRATION:7200000}
      issuer: ${JWT_ISSUER:xiaoxin-iam}
      audience: ${JWT_AUDIENCE:xiaoxin-iam-client}

logging:
  level:
    com.xiaoxin.iam: info
    org.springframework.cloud: info
    org.springframework.web: info
    org.springframework.security: info
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus"
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

thread-pool:
  core-pool-size: 10
  max-pool-size: 50
  queue-capacity: 1000
  keep-alive-seconds: 60