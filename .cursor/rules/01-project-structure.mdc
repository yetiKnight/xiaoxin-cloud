---
description: "Project structure guidelines for IAM platform"
globs: "*"
priority: 1100
type: "Always Apply"
---

# 小信云IAM平台项目结构指导

## 项目概述
小信云IAM平台是基于Spring Cloud Alibaba构建的企业级统一身份与权限管理平台，采用微服务架构。

## 核心技术栈
- **基础框架**: Spring Boot 3.2.9 + Spring Security 6.1.5
- **微服务**: Spring Cloud Alibaba 2023.0.3.3
- **服务治理**: Nacos 2.4.2（注册+配置中心）
- **API网关**: Spring Cloud Gateway 4.1.0
- **限流熔断**: Sentinel 1.8.8
- **分布式事务**: Seata 2.1.0
- **消息队列**: RocketMQ 5.3.1
- **数据存储**: MySQL 8.0 + Redis 6.0 + Elasticsearch 7.17.9 + MongoDB 5.0

## 项目结构分层设计

### 基础层
- **[iam-common/](mdc:iam-common/)**: 公共模块，包含基础工具类、异常处理、常量定义
- **[iam-dependencies/](mdc:iam-dependencies/)**: 统一依赖版本管理模块

### 组件层 
- **[iam-starters/](mdc:iam-starters/)**: Spring Boot Starter集合
  - **[iam-spring-boot-starter/](mdc:iam-starters/iam-spring-boot-starter/)**: 基础Starter
  - **[iam-spring-boot-starter-web/](mdc:iam-starters/iam-spring-boot-starter-web/)**: Web相关Starter
  - **[iam-spring-boot-starter-security/](mdc:iam-starters/iam-spring-boot-starter-security/)**: 安全相关Starter
  - **[iam-spring-boot-starter-data/](mdc:iam-starters/iam-spring-boot-starter-data/)**: 数据访问Starter
  - **[iam-spring-boot-starter-cache/](mdc:iam-starters/iam-spring-boot-starter-cache/)**: 缓存相关Starter

### 基础设施层
- **[iam-gateway/](mdc:iam-gateway/)**: API网关服务（端口8080）

### 微服务层
- **[services/iam-auth-service/](mdc:services/iam-auth-service/)**: 认证服务（端口8081）
- **[services/iam-core-service/](mdc:services/iam-core-service/)**: 核心业务服务（端口8082）
- **[services/iam-audit-service/](mdc:services/iam-audit-service/)**: 审计服务（端口8083）
- **[services/iam-system-service/](mdc:services/iam-system-service/)**: 系统服务（端口8084）

### 应用层
- **[apps/iam-frontend/](mdc:apps/iam-frontend/)**: 前端服务（端口8088）

### 配置与部署
- **[config-init/](mdc:config-init/)**: 配置初始化文件
- **[docker-compose/](mdc:docker-compose/)**: Docker编排配置
- **[docs/](mdc:docs/)**: 项目文档

## 数据存储架构
| 数据库 | 用途 | 说明 |
|---------|------|------|
| iam_auth | 认证数据 | OAuth2客户端、授权信息 |
| iam_core | 核心业务 | 用户、权限、组织架构 |
| iam_audit | 审计日志 | 操作日志、登录日志 |
| iam_system | 系统配置 | 配置、字典、通知 |

## 开发指导原则
1. 严格按照分层架构设计进行开发
2. 各服务间通过Feign进行调用
3. 统一使用Spring Boot Starter组合依赖
4. 配置文件统一在Nacos管理
5. 数据库严格按业务领域隔离